                      ----- Технічне завдання ----- 

на розробку Telegram-бота для вибору проведення дозвілля “TheNextStep Bot”



                       ----- Опис проєкту: ----- 

Розробити Telegram-бот, який допоможе користувачам обирати способи проведення вільного часу. 
Користувач може вибирати з різних опцій, таких як кафе, парк (проведення часу на вулиці), 
спа і спорт (спортзали, спортивні гуртки, йога і тд). Після вибору бот запитує локацію користувача 
(місто та вулицю) і діапазон (за замовчуванням або встановити свій), а тоді надає список доступних 
місць, при натисканні на бажане місце, користувач отримує опис місця (Назва, адреса, робочі години,
рейтинг) та карту Google Maps. Також користувач може перейти на веб-сторінку при натисканні на кнопку
і вже там переглянути та візульно вибрати потрібне місце, глянути його на карті.



                    ----- Функціональні вимоги: -----

1. Вибір активності:
    o Користувачі можуть обирати одну з наступних категорій:
        • Кафе
        • Парки (проведення часу на вулиці)
        • Спа (масажі, басейни та ін.)
        • Спорт (спортзали, спортивні гуртки та ін.)
	
    o ! На початковому етапі буде реалізовано лише категорію "Кафе".

2. Задання локації та діапазону:
    o Базовий функціонал: Перед початком користування вказати адресу. 
    o Розширений функціонал: або(+) можливість вказати геолокацію (визначення поточного місцезнаходження). 
    o Далі користувач обирає діапазон для пошуку локацій, який за замовчуванням 1 км, але є можливість 
      його змінити на той, котрий зручний юзеру
 
3. Список локацій:
    o Після вибору активності та встановлення локації бот відображатиме список доступних локацій у вигляді 
      кнопок у межах за замовчуванням або вибраним.
      * Початкова реалізація використовуватиме статичний список кафе, збережений у базі даних.

    o В майбутніх версіях планується інтеграція з Google API для динамічного отримання локацій в базу 
      даних та їх відображення.

4. Інтеграція карти:
    o Після того як користувач обере місце зі списку, бот надішле посилання на Google Maps 
      із маршрутом до обраного місця.
    o Бот надасть карту безпосередньо в чаті Telegram.

5. Управління базою даних:
    o Використання бази даних для зберігання статичного списку кафе.
    o У базі даних повинні бути такі поля:
        • ID локації
        • Назва
        • Адреса
        • Координати

    o У майбутніх оновленнях буде реалізовано динамічне управління цим списком за допомогою даних 
      Google Places API.

6. Інтерфейс користувача:
    o Бот має бути максимально простим на вигляд і комфортним у використанні, як можна менше 
      кнопок і тексту, щоб не страшити і плутати користувача, який повинен вибирати опції інтуїтивно.
 
7. Інтеграція Google APIs:
    o Передача вказаної локації користувача в Google Geocoding API, для перетворення їх в координати
    o Реалізація Google Places API для отримання та відображення локацій.
    o Робота з картою на веб сторінці з допомогою Google Maps API.

                      

                     ----- Нефункціональні вимоги: -----

1. Продуктивність:
    o Швидкий час відповіді при взаємодії з базою даних та Google Maps API.
    o Бот повинен реагувати на запити користувача протягом кількох секунд.

2. Масштабованість:
    o Підтримка збільшення кількості активностей та локацій у міру розвитку бота.

3. Безпека:
    o Захищена взаємодія з Google APIs за допомогою ключів API.
    o Захист даних користувачів і забезпечення конфіденційності комунікацій.



                      ----- Технологічний стек: -----

• Мова програмування: Node.js
• База даних: MongoDB
• Інтеграція API: Google Geocodein, Places, Maps APIs
• Telegram Bot API: Для взаємодії з ботом
• Хостинг: Render - деплой власного API для отримання даних з БД на веб-сторінку
           MongoDB Atlas - деплой бази даних
           GitHub - хостинг вебсайту


                         ----- Тестування: -----

1. Функціональне тестування:
    o Перевірка, що бот коректно обробляє введення користувача та надає очікувані 
      списки локацій і посилання на Google Maps.

2. Тестування продуктивності:
    o Переконатися, що час відповіді бота відповідає визначеним вимогам при різних навантаженнях.

3. Тестування безпеки:
    o Перевірка вразливостей у використанні ключів API та безпеки бази даних.



                         ----- Термін розробки: -----

• Початкова реалізація: 1 місяць (фокус на кафе зі статичним списком)
• Друга фаза реалізації: 2-3 місяці (інтеграція Google APIs та розширення на інші активності)
