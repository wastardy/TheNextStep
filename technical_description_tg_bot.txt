                      ----- Технічне завдання ----- 

на розробку Telegram-бота для вибору проведення дозвілля “TheNextStep Bot”



                       ----- Опис проєкту: ----- 

Розробити Telegram-бот, який допоможе користувачам обирати способи проведення вільного часу. 
Користувач може вибирати з різних опцій, таких як кафе, парки (проведення часу на вулиці), 
культурні заходи (кінотеатри, театри, виставки) і спорт (баскетбольні, тенісні, волейбольні 
корти, футбольні поля, спортзали). Після вибору бот запитує локацію користувача і діапазон 
(залишити за замовчуванням або встановити свій), а тоді надає список доступних місць та 
запропонує маршрут до обраного місця за допомогою Google Maps.



                    ----- Функціональні вимоги: -----

1. Вибір активності:
    o Користувачі можуть обирати одну з наступних категорій:
        • Кафе (різні види кафе)
        • Парки (проведення часу на вулиці)
        • Культурні заходи (кіно, вистава, виставки)
        • Спорт (баскетбольні корти, футбольні поля, тенісні корти, спортзали)
	
    o ! На початковому етапі буде реалізовано лише категорію "Кафе".

2. Задання локації та діапазону:
    o Базовий функціонал: Перед початком користування вказати адресу. 
    o Розширений функціонал: або(+) можливість вказати геолокацію (визначення поточного місцезнаходження). 
    o Далі користувач обирає діапазон для пошуку локацій, який за замовчуванням 1 км, але є можливість 
      його змінити на той, котрий зручний юзеру
 
3. Список локацій:
    o Після вибору активності та встановлення локації бот відображатиме список доступних локацій у вигляді 
      кнопок у межах за замовчуванням або вибраним.
      * Початкова реалізація використовуватиме статичний список кафе, збережений у базі даних.

    o В майбутніх версіях планується інтеграція з Google Maps API для динамічного отримання локацій в базу 
      даних та їх відображення.

4. Інтеграція з Google Maps:
    o Після того як користувач обере місце зі списку, бот надішле посилання на Google Maps 
      із маршрутом до обраного місця.
    o Бот надасть карту безпосередньо в чаті Telegram.

5. Управління базою даних:
    o Використання бази даних для зберігання статичного списку кафе.
    o У базі даних повинні бути такі поля:
        • ID локації
        • Назва
        • Адреса
        • Координати

    o У майбутніх оновленнях буде реалізовано динамічне управління цим списком за допомогою даних 
      Google Maps API.

6. Інтерфейс користувача:
    o Бот має бути максимально простим на вигляд і комфортним у використанні, як можна менше 
      кнопок і тексту, щоб не страшити і плутати користувача, який повинен вибирати опції інтуїтивно.
 
7. Інтеграція Google Maps API:
    o Реалізація Google Maps API для:
        • Отримання та відображення локацій.
        • Надання маршрутів від поточного місця користувача до вибраної локації.

                      

                     ----- Нефункціональні вимоги: -----

1. Продуктивність:
    o Швидкий час відповіді при взаємодії з базою даних та Google Maps API.
    o Бот повинен реагувати на запити користувача протягом кількох секунд.

2. Масштабованість:
    o Підтримка збільшення кількості активностей та локацій у міру розвитку бота.

3. Безпека:
    o Захищена взаємодія з Google Maps API за допомогою ключів API.
    o Захист даних користувачів і забезпечення конфіденційності комунікацій.



                      ----- Технологічний стек: -----

• Мова програмування: Node.js
• База даних: SQL (SQLite або MySQL для початкової реалізації/ MongoDB)
• Інтеграція API: Google Maps API
• Telegram Bot API: Для взаємодії з ботом
• Хостинг: Хмарний або локальний сервер для бази даних та сервісів бота
 


                         ----- Тестування: -----

1. Функціональне тестування:
    o Перевірка, що бот коректно обробляє введення користувача та надає очікувані 
      списки локацій і посилання на Google Maps.

2. Тестування продуктивності:
    o Переконатися, що час відповіді бота відповідає визначеним вимогам при різних навантаженнях.

3. Тестування безпеки:
    o Перевірка вразливостей у використанні ключів API та безпеки бази даних.



                         ----- Термін розробки: -----

• Початкова реалізація: 1 місяць (фокус на кафе зі статичним списком)
• Друга фаза реалізації: 2-3 місяці (інтеграція Google Maps API та розширення на інші активності)
